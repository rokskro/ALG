@model CipherViewModel

@{
    ViewBag.Title = "Cipher Cipher";
}

<h5><i class="bi bi-braces"></i> Testing Ground</h5>
<div class="container">
    <p>Algorithim type:
        <div class="form-group">
        <select class="form-select" aria-label="Default select example">
            <option selected>Select</option>
            <option value="A1Z">A1Z26</option>
            <option value="Caesar">Caesar</option>
        </select>
        </div>
    </p> 
</div>

<div id="A1Z" class="d-none">
    <h5>A1Z26</h5>

@using (Html.BeginForm("A1ZCipher", "Cipher", FormMethod.Post))
{
    <div class="container">
        <div class="row">
            <div class="col">
                <div class="input-group mb-3">
                    <span class="input-group-text" id="title"><i class="bi bi-repeat"> Replace</i></span>
                    <button type="submit" class="btn btn-dark btn-sm"><i class="bi bi-play"></i></button>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col">
                <div class="card">
                    <div class="card-header bg-dark" style="color: #ffffff">
                        Text Input
                    </div>
                    <div class="card-body">
                        <div class="form-group">
                            @Html.TextBoxFor(model => model.InputText, new { @class = "form-control" })
                        </div>   
                    </div>
                </div>
            </div>
            <div class="col">
                <div class="card">
                    <div class="card-header bg-dark" style="color: #ffffff">
                        Text Output
                    </div>
                    <div class="card-body">
                    @if (!string.IsNullOrEmpty(Model.EncryptedText) && !string.IsNullOrEmpty(Model.DecryptedText))
                    {
                        <h6>Encrypted Text: @Model.EncryptedText</h6>
                        <h6>Decrypted Text: @Model.DecryptedText</h6>
                    }
                    </div>
                </div>
            </div>
        </div>
    </div>   
}

</div>

<div id="Caesar" class="d-none">
    <h5>Caesar</h5>

@using (Html.BeginForm("EncryptDecrypt", "Cipher", FormMethod.Post))
{
    <div class="container">
        <div class="row">
            <div class="col">
                <div class="input-group mb-3">
                    <span class="input-group-text" id="key"><i class="bi bi-key"> Key</i></span>
                     @Html.TextBoxFor(model => model.Shift, new { @class = "form-control" })
                    <button type="submit" class="btn btn-dark btn-sm"><i class="bi bi-play"></i></button>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col">
                <div class="card">
                    <div class="card-header bg-dark" style="color: #ffffff">
                        Text Input
                    </div>
                    <div class="card-body">
                        <div class="form-group">
                            @Html.TextBoxFor(model => model.InputText, new { @class = "form-control" })
                        </div>   
                    </div>
                </div>
            </div>
            <div class="col">
                <div class="card">
                    <div class="card-header bg-dark" style="color: #ffffff">
                        Text Output
                    </div>
                    <div class="card-body">
                        @if (!string.IsNullOrEmpty(Model.EncryptedText) && !string.IsNullOrEmpty(Model.DecryptedText))
                        {
                            <h6>Encrypted Text: @Model.EncryptedText</h6>
                            <h6>Decrypted Text: @Model.DecryptedText</h6>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>   
}

</div>

<script src="https://code.jquery.com/jquery-3.2.1.slim.min.js" integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/popper.js@1.12.9/dist/umd/popper.min.js" integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/js/bootstrap.min.js" integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl" crossorigin="anonymous"></script>
    <script>
        $(document).ready(function () {
            $("#selectForm").change(function () {
                var selectedForm = $(this).val();
                $(".d-none").hide();
                $("#" + selectedForm).show();
            });
        });
    </script>

